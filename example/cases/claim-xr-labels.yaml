# Claim for TestLabelInjection - XR Label Injection Demonstration
# This creates a test instance that showcases comprehensive XR label injection capabilities

apiVersion: test.kubecore.io/v1alpha1
kind: TestLabelInjection
metadata:
  name: xr-label-injection-demo
  namespace: default
  labels:
    # These existing labels will be preserved with merge strategy
    existing-label: "should-be-preserved"
    test-type: "xr-label-injection"
    kubecore.io/test-case: "label-injection-1"
  annotations:
    kubecore.io/description: "Demonstrates comprehensive XR label injection capabilities"
    kubecore.io/expected-result: "16+ labels applied to XR with various transformations"
    kubecore.io/features-tested: "static, dynamic, transformations, namespace-detection"
spec:
  # Project name will be extracted and transformed to lowercase
  projectName: "Demo-KubeCore-Project"
  
  # Environment will be normalized to lowercase
  environment: "PRODUCTION"
  
  # Team configuration for nested field extraction
  teamConfig:
    name: "Platform-Engineering"
    costCenter: "CC-PLATFORM-2024"
    region: "us-west-2"
  
  # Metadata for complex transformations
  metadata:
    version: "v2.1.0"
    deploymentId: "deploy-2024-12-21-alpha"
  
  # Reference to the composition
  compositionRef:
    name: test-xr-labels

---
# Alternative claim with different values to test transformations
apiVersion: test.kubecore.io/v1alpha1
kind: TestLabelInjection
metadata:
  name: xr-label-edge-cases
  namespace: production
  labels:
    # Test merge strategy with conflicting labels
    kubecore.io/organization: "should-be-overridden"
    custom-label: "preserved"
  annotations:
    kubecore.io/description: "Tests edge cases and merge conflicts in label injection"
spec:
  # Test with different casing and special characters
  projectName: "UPPERCASE-PROJECT-123"
  
  # Different environment
  environment: "staging"
  
  # Different team configuration
  teamConfig:
    name: "QA-Testing"
    costCenter: "CC-QA-789"
    region: "us-east-1"
  
  # Different metadata values
  metadata:
    version: "v0.0.1-beta"
    deploymentId: "emergency-hotfix-2024-12-21-critical"
  
  compositionRef:
    name: test-xr-labels

---
# Minimal claim to test defaults and missing fields
apiVersion: test.kubecore.io/v1alpha1
kind: TestLabelInjection
metadata:
  name: xr-label-minimal
  namespace: test
  annotations:
    kubecore.io/description: "Tests label injection with minimal configuration and defaults"
spec:
  # Using all default values to test fallback behavior
  compositionRef:
    name: test-xr-labels