# Fixed Composition - Template Error Corrected
---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xschemaregistries.platform.kubecore.io
spec:
  group: platform.kubecore.io
  names:
    kind: XSchemaRegistry
    plural: xschemaregistries
  versions:
  - name: v1alpha1
    served: true
    referenceable: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              githubProjectRef:
                type: object
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
              enableTransitiveDiscovery:
                type: boolean
                default: true
              traversalDepth:
                type: integer
                default: 3
            required:
            - githubProjectRef
          status:
            type: object
            properties:
              executionContext:
                type: object
              referencedResourceSchemas:
                type: object
              discoveryStats:
                type: object

# ---
# apiVersion: apiextensions.crossplane.io/v1
# kind: Composition
# metadata:
#   name: schema-registry
#   labels:
#     provider: kubecore
#     component: schema-registry
# spec:
#   compositeTypeRef:
#     apiVersion: platform.kubecore.io/v1alpha1
#     kind: XSchemaRegistry
#   mode: Pipeline
#   pipeline:
#   - step: context-extraction
#     functionRef:
#       name: function-kubecore-schema-registry
#     input:
#       apiVersion: fn.crossplane.io/v1beta1
#       kind: Input
#       enableTransitiveDiscovery: true
#       traversalDepth: 3
#       includeFullSchema: true

#   - step: create-configmap
#     functionRef:
#       name: function-go-templating
#     input:
#       apiVersion: gotemplating.fn.crossplane.io/v1beta1
#       kind: GoTemplate
#       source: Inline
#       inline:
#         template: |+
#           {{ $ctx := .observed.composite.resource }}
#           {{ $schemaData := index .context "kubecore.schemaRegistry.detailedStatus" }}
#           ---
#           apiVersion: kubernetes.crossplane.io/v1alpha1
#           kind: Object
#           metadata:
#             name: {{ $ctx.metadata.name }}-context
#             annotations:
#               crossplane.io/external-name: {{ $ctx.metadata.name }}-context
#               gotemplating.fn.crossplane.io/composition-resource-name: {{ $ctx.metadata.name }}-context
#           spec:
#             forProvider:
#               manifest:
#                 apiVersion: v1
#                 kind: ConfigMap
#                 metadata:
#                   name: {{ $ctx.metadata.name }}-context
#                   namespace: {{ $ctx.spec.githubProjectRef.namespace | default "default" }}
#                 data:
#                   resourceType: "{{ $ctx.kind }}"
#                   resourceName: "{{ $ctx.metadata.name }}"
#                   githubProjectRef: "{{ $ctx.spec.githubProjectRef.name }}"
#                   transitiveDiscovery: "{{ $ctx.spec.enableTransitiveDiscovery }}"
#                   {{ if $schemaData }}
#                   schemaRegistryResults: {{ $schemaData | quote }}
#                   {{ else }}
#                   schemaRegistryResults: "No schema data available"
#                   {{ end }}
#             providerConfigRef:
#               name: kubesys-enhanced

#   # Auto-Ready Function (Aggregate child resource readiness)
#   - step: auto-ready
#     functionRef:
#       name: function-auto-ready
#     input:
#       apiVersion: autoready.fn.crossplane.io/v1beta1
#       kind: Input
