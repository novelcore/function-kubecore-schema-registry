# XRD Definition for Schema Registry Test
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xschemaregistrytests.test.kubecore.platform.io
spec:
  group: test.kubecore.platform.io
  names:
    kind: XSchemaRegistryTest
    plural: xschemaregistrytests
  claimNames:
    kind: SchemaRegistryTest
    plural: schemaregistrytests
  versions:
  - name: v1alpha1
    served: true
    referenceable: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              testName:
                type: string
                description: "Name identifier for this test run"
              description:
                type: string
                description: "Description of what this test validates"
            required:
            - testName
          status:
            type: object
            properties:
              fetchSummary:
                type: object
                properties:
                  totalRequested:
                    type: integer
                  successful:
                    type: integer
                  failed:
                    type: integer
                  skipped:
                    type: integer
                  executionTime:
                    type: string
---
# test-composition.yaml
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xschemaregistrytest.test.kubecore.platform.io
spec:
  compositeTypeRef:
    apiVersion: test.kubecore.platform.io/v1alpha1
    kind: XSchemaRegistryTest

  mode: Pipeline

  pipeline:
  # Step 1: Call the Schema Registry Function with actual input schema
  - step: fetch-resources
    functionRef:
      name: function-kubecore-schema-registry
    input:
      apiVersion: registry.fn.crossplane.io/v1beta1
      kind: Input
      fetchTimeout: "10s"
      maxConcurrentFetches: 5
      fetchResources:
      # Fetch GitHubProject
      - into: githubProject
        name: demo-project
        namespace: test
        apiVersion: github.platform.kubecore.io/v1alpha1
        kind: GitHubProject
        optional: false

      # Fetch GithubProvider
      - into: githubProvider
        name: gh-default
        namespace: default
        apiVersion: github.platform.kubecore.io/v1alpha1
        kind: GithubProvider
        optional: false

  # Step 2: Process fetched resources and create ConfigMaps
  - step: generate-configmaps
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          {{- $resources := index .context "kubecore-schema-registry.fn.kubecore.platform.io/fetched-resources" }}
          {{- $fetchSummary := index $resources "fetchSummary" }}
          {{- $testName := .observed.composite.resource.spec.testName }}
          {{- $namespace := .observed.composite.resource.metadata.namespace | default "default" }}

          {{- /* Summary ConfigMap with fetch results */}}
          ---
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            name: {{ $testName }}-summary
            annotations:
              crossplane.io/external-name: {{ $testName }}-summary
              gotemplating.fn.crossplane.io/composition-resource-name: {{ $testName }}-summary
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: {{ $testName }}-summary
                  namespace: {{ $namespace }}
                  labels:
                    kubecore.io/test-name: {{ $testName }}
                    kubecore.io/test-type: phase1-validation
                  annotations:
                    kubecore.io/fetched-at: {{ now | date "2006-01-02T15:04:05Z07:00" }}
                data:
                  test-name: {{ $testName }}
                  total-resource-types: "{{ $fetchSummary.successful }}"
                  {{- if $fetchSummary }}
                  fetch-summary-total: "{{ $fetchSummary.totalRequested }}"
                  fetch-summary-successful: "{{ $fetchSummary.successful }}"
                  fetch-summary-failed: "{{ $fetchSummary.failed }}"
                  fetch-summary-skipped: "{{ $fetchSummary.skipped }}"
                  {{- end }}
                  {{- if $resources.githubProject }}
                  github-project-count: "1"
                  {{- else }}
                  github-project-count: "0"
                  {{- end }}
                  {{- if $resources.githubProvider }}
                  github-provider-count: "1"
                  {{- else }}
                  github-provider-count: "0"
                  {{- end }}
            providerConfigRef:
              name: kubesys-enhanced

          {{- /* GitHubProject Details ConfigMap */}}
          {{- if $resources.githubProject }}
          {{- $project := $resources.githubProject }}
          ---
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            name: {{ $testName }}-githubproject-details
            annotations:
              crossplane.io/external-name: {{ $testName }}-githubproject-{{ $project.metadata.name }}
              gotemplating.fn.crossplane.io/composition-resource-name: {{ $testName }}-githubproject-details
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: {{ $testName }}-githubproject-{{ $project.metadata.name }}
                  namespace: {{ $namespace }}
                  labels:
                    kubecore.io/test-name: {{ $testName }}
                    kubecore.io/resource-type: githubproject
                    kubecore.io/resource-name: {{ $project.metadata.name }}
                  annotations:
                    kubecore.io/fetched-at: {{ index $project "_kubecore" "fetchedAt" | default (now | date "2006-01-02T15:04:05Z07:00") }}
                    kubecore.io/matched-by: {{ index $project "_kubecore" "matchedBy" | default "direct" }}
                data:
                  name: {{ $project.metadata.name }}
                  namespace: {{ $project.metadata.namespace | default "none" }}
                  uid: {{ $project.metadata.uid | default "not-available" }}
                  {{- if $project.spec }}
                  description: {{ $project.spec.description | quote }}
                  visibility: {{ $project.spec.visibility | default "private" }}
                  {{- if $project.spec.githubProviderRef }}
                  github-provider-ref-name: {{ $project.spec.githubProviderRef.name }}
                  {{- end }}
                  {{- if $project.spec.repositorySource }}
                  repository-source-type: {{ $project.spec.repositorySource.type }}
                  {{- if $project.spec.repositorySource.template }}
                  template-owner: {{ $project.spec.repositorySource.template.owner }}
                  template-repository: {{ $project.spec.repositorySource.template.repository }}
                  {{- end }}
                  {{- end }}
                  {{- end }}
                  {{- if $project.status }}
                  {{- if $project.status.conditions }}
                  status-ready: "{{ range $project.status.conditions }}{{ if eq .type "Ready" }}{{ .status }}{{ end }}{{ end }}"
                  {{- end }}
                  {{- if $project.status.repositoryUrl }}
                  repository-url: {{ $project.status.repositoryUrl }}
                  {{- end }}
                  {{- end }}
            providerConfigRef:
              name: kubesys-enhanced
          {{- end }}

          {{- /* GithubProvider Details ConfigMap */}}
          {{- if $resources.githubProvider }}
          {{- $provider := $resources.githubProvider }}
          ---
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            name: {{ $testName }}-githubprovider-details
            annotations:
              crossplane.io/external-name: {{ $testName }}-githubprovider-{{ $provider.metadata.name }}
              gotemplating.fn.crossplane.io/composition-resource-name: {{ $testName }}-githubprovider-details
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: {{ $testName }}-githubprovider-{{ $provider.metadata.name }}
                  namespace: {{ $namespace }}
                  labels:
                    kubecore.io/test-name: {{ $testName }}
                    kubecore.io/resource-type: githubprovider
                    kubecore.io/resource-name: {{ $provider.metadata.name }}
                  annotations:
                    kubecore.io/fetched-at: {{ index $provider "_kubecore" "fetchedAt" | default (now | date "2006-01-02T15:04:05Z07:00") }}
                    kubecore.io/matched-by: {{ index $provider "_kubecore" "matchedBy" | default "direct" }}
                data:
                  name: {{ $provider.metadata.name }}
                  namespace: {{ $provider.metadata.namespace | default "cluster-scoped" }}
                  uid: {{ $provider.metadata.uid | default "not-available" }}
                  {{- if $provider.spec }}
                  {{- if $provider.spec.secretStoreRef }}
                  secret-store-kind: {{ $provider.spec.secretStoreRef.kind | default "ClusterSecretStore" }}
                  secret-store-name: {{ $provider.spec.secretStoreRef.name }}
                  {{- end }}
                  {{- if $provider.spec.aws }}
                  aws-secret-id: {{ $provider.spec.aws.secretId }}
                  {{- end }}
                  {{- if $provider.spec.secret }}
                  secret-name: {{ $provider.spec.secret.name }}
                  secret-namespace: {{ $provider.spec.secret.namespace | default "crossplane-system" }}
                  {{- end }}
                  {{- if $provider.spec.github }}
                  github-organization: {{ $provider.spec.github.organization }}
                  github-is-enterprise: "{{ $provider.spec.github.isEnterprise | default false }}"
                  {{- if $provider.spec.github.baseURL }}
                  github-base-url: {{ $provider.spec.github.baseURL }}
                  {{- end }}
                  {{- end }}
                  refresh-interval: {{ $provider.spec.refreshInterval | default "1m" }}
                  {{- if $provider.spec.kubernetesProviderConfigRef }}
                  kubesys-enhanced-config: {{ $provider.spec.kubernetesProviderConfigRef }}
                  {{- end }}
                  {{- end }}
            providerConfigRef:
              name: kubesys-enhanced
          {{- end }}

          {{- /* Relationships Discovery ConfigMap */}}
          ---
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            name: {{ $testName }}-relationships
            annotations:
              crossplane.io/external-name: {{ $testName }}-relationships
              gotemplating.fn.crossplane.io/composition-resource-name: {{ $testName }}-relationships
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: {{ $testName }}-relationships
                  namespace: {{ $namespace }}
                  labels:
                    kubecore.io/test-name: {{ $testName }}
                    kubecore.io/test-type: relationships
                  annotations:
                    kubecore.io/generated-at: {{ now | date "2006-01-02T15:04:05Z07:00" }}
                data:
                  {{- if and $resources.githubProject $resources.githubProvider }}
                  {{- $project := $resources.githubProject }}
                  {{- if $project.spec.githubProviderRef }}
                  project-{{ $project.metadata.name }}-provider: {{ $project.spec.githubProviderRef.name }}
                  {{- end }}
                  {{- end }}
                  relationship-count: "{{ if $resources.githubProject }}1{{ else }}0{{ end }}"
            providerConfigRef:
              name: kubesys-enhanced

          {{- /* Debug Output ConfigMap */}}
          ---
          apiVersion: kubernetes.crossplane.io/v1alpha2
          kind: Object
          metadata:
            name: {{ $testName }}-debug
            annotations:
              crossplane.io/external-name: {{ $testName }}-debug
              gotemplating.fn.crossplane.io/composition-resource-name: {{ $testName }}-debug
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: {{ $testName }}-debug
                  namespace: {{ $namespace }}
                  labels:
                    kubecore.io/test-name: {{ $testName }}
                    kubecore.io/test-type: debug
                  annotations:
                    kubecore.io/generated-at: {{ now | date "2006-01-02T15:04:05Z07:00" }}
                data:
                  context-keys: |
                    {{- range $key, $_ := .context }}
                    - {{ $key }}
                    {{- end }}
                  resource-types-fetched: |
                    {{- if $resources.githubProject }}
                    - githubProject
                    {{- end }}
                    {{- if $resources.githubProvider }}
                    - githubProvider
                    {{- end }}
                    {{- if not (or $resources.githubProject $resources.githubProvider) }}
                    No resources fetched
                    {{- end }}
                  raw-output-sample: |
                    {{- if $resources.githubProject }}
                    {{- $sample := $resources.githubProject }}
                    {{ $sample | toYaml | nindent 20 }}
                    {{- else }}
                    No GitHubProject found
                    {{- end }}
                  fetch-summary-raw: |
                    {{- if $fetchSummary }}
                    {{ $fetchSummary | toYaml | nindent 20 }}
                    {{- else }}
                    No fetch summary available
                    {{- end }}
            providerConfigRef:
              name: kubesys-enhanced
